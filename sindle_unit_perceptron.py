# -*- coding: utf-8 -*-
"""Sindle unit Perceptron.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FMKsspTtxDBZTDmzqmrhvjeduJURrP0k
"""

import numpy as np
#numpy library, which is used for working with arrays and matrices. It's often used in machine learning for handling large datasets.
import pandas as pd
#library, which is used for handling data in tables (like spreadsheets). It makes it easy to read, clean, and manipulate data.
import seaborn as sns
#helps create attractive and informative statistical graphics.
import matplotlib.pyplot as plt
#This is another library for creating visualizations.
from sklearn.linear_model import Perceptron
#This imports the Perceptron algorithm from the sklearn library. Perceptron is a type of machine learning model used for binary classification
df=pd.read_csv("/content/placement.csv")
#This reads a CSV file
x=df.iloc[:,0:2]
#This selects all rows (:) but only the first two columns (0:2) from the df
y=df.iloc[:,-1]
#This selects all rows (:) but only the last column (-1 represents the last column
p=Perceptron()#This creates an instance of the Perceptron model
p.fit(x,y)#This trains the Perceptron model using the data.
print(p.coef_)#After training the model, this prints the coefficients (weights) of the Perceptron model
z=p.score(x,y)#This calculates the accuracy of the trained Perceptron model on the data
print("accuracyscore is",z)
from mlxtend.plotting import plot_decision_regions#This function helps visualize how the model separates different classes in the feature space.
plot_decision_regions(x.values,y.values,clf=p,legend=2)
#This function takes in the feature data (x.values) and the target data (y.values), then plots the decision regions of the Perceptron model (clf=p). A decision region shows the areas where the model predicts one class or another. legend=2 adds a legend to the plot, making it easier to understand.